author: JeffreyWilkinson
core-version: >=5.1.4
created: 20141203185959881
dependents: 
description: enables user templates for each type
list: readme license
plugin-type: plugin
source: https://github.com/buggyj/TW5-typestemplate
title: $:/plugins/bj/typestemplate
type: application/json
version: 0.0.1

{
    "tiddlers": {
        "$:/plugins/bj/typestemplate/callEditPicker": {
            "title": "$:/plugins/bj/typestemplate/callEditPicker",
            "text": "<<editTemplatePicker>>\n\n"
        },
        "$:/plugins/bj/typestemplate/callViewPicker": {
            "title": "$:/plugins/bj/typestemplate/callViewPicker",
            "text": "<<viewTemplatePicker>>\n\n"
        },
        "$:/plugins/bj/typestemplate/editTemplatePicker.js": {
            "text": "/*\\\ntitle: $:/plugins/bj/typestemplate/editTemplatePicker.js\ntype: application/javascript\nmodule-type: macro\n\n\n\\*/\n\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this macro\n\n*/\n\nexports.name = \"editTemplatePicker\";\n\nexports.params = [\n\n];\n/*\nRun the macro\n*/\n// Mappings from content type to edit templates type are stored in tiddlers with this prefix\nvar EDIT_TEMPLATE_MAPPING_PREFIX = \"$:/config/EditTemplateTypeMappings/\";\n\nexports.run = function() {\n\t\nvar cur = this.getVariable(\"currentTiddler\"), template, \n\ttiddler = this.wiki.getTiddler(cur);\n\t\n\ttiddler && tiddler.fields && tiddler.fields.type? \n\t\t\ttemplate =  $tw.wiki.getTiddlerText(EDIT_TEMPLATE_MAPPING_PREFIX +tiddler.fields.type) : template = null;\n\tif (!template)\n\t\treturn  $tw.wiki.getTiddlerText(\"$:/core/ui/EditTemplate\");\t\n\ttemplate = template.trim();\nreturn  $tw.wiki.getTiddlerText(template)||$tw.wiki.getTiddlerText(\"$:/core/ui/EditTemplate\");\n}\n\n})();\n",
            "title": "$:/plugins/bj/typestemplate/editTemplatePicker.js",
            "type": "application/javascript",
            "module-type": "macro"
        },
        "$:/plugins/bj/typestemplate/license": {
            "title": "$:/plugins/bj/typestemplate/license",
            "text": "The MIT License (MIT)\n\nCopyright (c) 2014 Jeffrey Wikinson aka buggyj\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        "$:/plugins/bj/typestemplate/readme": {
            "title": "$:/plugins/bj/typestemplate/readme",
            "text": ""
        },
        "$:/core/ui/PageTemplate/story": {
            "title": "$:/core/ui/PageTemplate/story",
            "tags": "$:/tags/PageTemplate",
            "text": "<section class=\"tc-story-river\">\n\n<section class=\"story-backdrop\">\n\n<$list filter=\"[all[shadows+tiddlers]tag[$:/tags/AboveStory]!has[draft.of]]\">\n\n<$transclude/>\n\n</$list>\n\n</section>\n\n<$list filter=\"[list[$:/StoryList]]\" history=\"$:/HistoryList\" template=\"$:/plugins/bj/typestemplate/callViewPicker\" editTemplate=\"$:/plugins/bj/typestemplate/callEditPicker\" storyview={{$:/view}} />\n\n<section class=\"story-frontdrop\">\n\n<$list filter=\"[all[shadows+tiddlers]tag[$:/tags/BelowStory]!has[draft.of]]\">\n\n<$transclude/>\n\n</$list>\n\n</section>\n\n</section>\n"
        },
        "$:/plugins/bj/typestemplate/viewTemplatePicker.js": {
            "text": "/*\\\ntitle: $:/plugins/bj/typestemplate/viewTemplatePicker.js\ntype: application/javascript\nmodule-type: macro\n\n\n\\*/\n\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this macro\n\n*/\n\nexports.name = \"viewTemplatePicker\";\n\nexports.params = [\n\n];\n/*\nRun the macro\n*/\n// Mappings from content type to edit templates type are stored in tiddlers with this prefix\nvar VIEW_TEMPLATE_MAPPING_PREFIX = \"$:/config/ViewTemplateTypeMappings/\";\n\nexports.run = function() {\n\t\nvar cur = this.getVariable(\"currentTiddler\"), template = null, \n\ttiddler = this.wiki.getTiddler(cur);\n\t\n\ttiddler && tiddler.fields && tiddler.fields.type? \n\t\t\ttemplate =  $tw.wiki.getTiddlerText(VIEW_TEMPLATE_MAPPING_PREFIX +tiddler.fields.type) : template = null;\n\tif (!template)\n\t\treturn  $tw.wiki.getTiddlerText(\"$:/core/ui/ViewTemplate\");\n\ttemplate = template.trim();\nreturn  $tw.wiki.getTiddlerText(template)||$tw.wiki.getTiddlerText(\"$:/core/ui/ViewTemplate\");\n}\n\n})();\n",
            "title": "$:/plugins/bj/typestemplate/viewTemplatePicker.js",
            "type": "application/javascript",
            "module-type": "macro"
        }
    }
}